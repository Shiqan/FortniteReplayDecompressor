name: Publish Packages

on:
  push:
    branches: 
        - master
    
jobs:
  check_skip:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && !contains(github.event.head_commit.message, '#ignore')
    steps:
      - run: |
          cat <<'MESSAGE'
            github.event_name: '${{ github.event_name }}'
            github.event.head_commit.message: '${{ github.event.head_commit.message }}'
          MESSAGE

  build:
    needs: check_skip
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.x
    - name: Build
      run: dotnet build ./src/FortniteReplayDecompressor.sln --configuration Release
    - name: Test
      run: dotnet test ./src/FortniteReplayDecompressor.sln --no-build --configuration Release
    - name: Get next version
      id: versioning
      uses: anothrNick/github-tag-action@1.52.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: patch
        WITH_V: false
        DRY_RUN: true
        PRERELEASE: false
        RELEASE_BRANCHES: master
        VERBOSE: true
    - name: Create PackageVersion
      id: packageversion
      run: echo ::set-output name=tag::${{ steps.versioning.outputs.new_tag }}
      
    - name: Pack OozSharp
      run: dotnet pack ./src/OozSharp/OozSharp.csproj -c Release -p:PackageVersion=${{ steps.packageversion.outputs.tag }}
    - name: Publish OozSharp
      run: dotnet nuget push ./src/OozSharp/**/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_TOKEN }} --no-symbols 1
    
    - name: Update Unreal.Encryption
      run: sed -i "s/ProjectReference Include=\"..\\\OozSharp\\\OozSharp.csproj\"/PackageReference Include=\"OozSharp\" Version=\"${{ steps.packageversion.outputs.tag }}\"/" ./src/Unreal.Encryption/Unreal.Encryption.csproj
    - name: Pack Unreal.Encryption
      uses: nick-invision/retry@v1
      with:
        timeout_minutes: 15
        max_attempts: 3
        retry_wait_seconds: 300
        command: dotnet nuget locals http-cache -c && dotnet pack ./src/Unreal.Encryption/Unreal.Encryption.csproj -c Release -p:PackageVersion=${{ steps.packageversion.outputs.tag }}
    - name: Publish Unreal.Encryption
      run: dotnet nuget push ./src/Unreal.Encryption/**/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_TOKEN }} --no-symbols 1     
         
    - name: Pack Unreal.Core
      run: dotnet pack ./src/Unreal.Core/Unreal.Core.csproj -c Release -p:PackageVersion=${{ steps.packageversion.outputs.tag }}
    - name: Publish Unreal.Core
      run: dotnet nuget push ./src/Unreal.Core/**/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_TOKEN }} --no-symbols 1
      
    - name: Update FortniteReplayReader
      run: sed -i "s/ProjectReference Include=\"..\\\Unreal.Core\\\Unreal.Core.csproj\"/PackageReference Include=\"Unreal.Core\" Version=\"${{ steps.packageversion.outputs.tag }}\"/" ./src/FortniteReplayReader/FortniteReplayReader.csproj
    - name: Update Unreal.Core
      run: sed -i "s/ProjectReference Include=\"..\\\Unreal.Encryption\\\Unreal.Encryption.csproj\"/PackageReference Include=\"Unreal.Encryption\" Version=\"${{ steps.packageversion.outputs.tag }}\"/" ./src/FortniteReplayReader/FortniteReplayReader.csproj
    - name: Pack FortniteReplayReader
      uses: nick-invision/retry@v1
      with:
        timeout_minutes: 15
        max_attempts: 3
        retry_wait_seconds: 300
        command: dotnet nuget locals http-cache -c && dotnet pack ./src/FortniteReplayReader/FortniteReplayReader.csproj -c Release -p:PackageVersion=${{ steps.packageversion.outputs.tag }}
    - name: Publish FortniteReplayReader
      run: dotnet nuget push ./src/FortniteReplayReader/**/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_TOKEN }} --no-symbols 1
      
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.52.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: patch
        WITH_V: false
        PRERELEASE: false
        RELEASE_BRANCHES: master
      